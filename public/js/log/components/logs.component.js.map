{"version":3,"sources":["log/components/logs.component.ts"],"names":[],"mappings":"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","file":"log/components/logs.component.js","sourcesContent":["import {Component, EventEmitter, Input, OnChanges,OnInit} from '@angular/core';\nimport {Observable} from 'rxjs/Rx';\nimport { LogService } from '../services/logService.service';\nimport {User,SharedService} from '../../SharedService'\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n    selector: 'dashboard',\n    providers: [LogService],\n    template: `\n    <div class=\"loader\" *ngIf=\"loader\">\n        <img src=\"../../images/loader-img.gif\" alt=\"\" />\n    </div>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-10 col-md-offset-1\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\">Dashboard</div>\n\n                    <div class=\"panel-body\">\n                        You are logged in! Welcome <span>{{ user.name }} </span>\n                        <button type=\"submit\" class=\"logout btn btn-primary\"  (click)=\"logout()\">Logout</button>\n                        <hr/>\n                        <table class=\"table\">\n                            <thead>\n                              <tr>\n                                <th>Checkin time</th>\n                                <th>Checkout time</th>\n                                <th>Total time</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let log of logs\">\n                                <td>{{log.checkin}} </td>\n                                <td>{{log.checkout}}</td>\n                                <td>{{log.total_time}}</td>\n                              </tr>\n                            </tbody>\n                          </table>\n                    </div>\n\n                    <button *ngIf=\"checking\" type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"checkout(user?.email)\">Checkout</button>\n                    <button *ngIf=\"!checking\" type=\"submit\" class=\"btn btn-warning btn-block\" (click)=\"checkin(user?.email)\">Checkin</button>\n                </div>\n            </div>\n        </div>\n    </div>\n `\n})\n\nexport class LogsComponent implements OnInit, OnChanges {\n private checking = false;\n logs: any;\n log_id:any;\n user:User;\n loader = false;\n\n\n constructor(\n     private logService: LogService,\n     private router: Router,\n     private ss:SharedService\n     ){}\n\n    checkin(values){\n        this.loader = true;\n    var current = this;\n    // Variable to hold a reference of addComment/updateComment\n    let logOperation:Observable<any>;\n    logOperation = this.logService.CheckIn(values);\n    logOperation.subscribe(\n      res => {\n          this.checking = true;\n          this.log_id = res.log_id;\n          this.loader = false;\n       },\n      err => { this.loader= false;}\n\n   );\n   }\n  checkout(values){\n    this.loader = true;\n  var current = this;\n  // Variable to hold a reference of addComment/updateComment\n  let logOperation:Observable<any>;\n  logOperation = this.logService.CheckOut(values,this.log_id);\n  logOperation.subscribe(\n    res => {\n        this.checking = false;\n        this.loader = false;\n     },\n    err => { this.loader = false; }\n\n );\n   this.loadLogs();\n }\n\nlogout(){\n  this.loader = true;\n  var current = this;\n  this.logService.logout()\n                  .subscribe(\n                    res => {\n                        if(res.isLoggedIn == false){\n                          this.loader = false;\n                          localStorage.removeItem('user');\n                          current.router.navigate(['']);\n\n                        }\n                     },\n                    err => { this.loader = false;}\n                  );\n}\n\n loadLogs(){\n        this.loader = true;\n      // Get all comments\n       this.logService.getLogs()\n                         .subscribe(\n                           res => {\n                              this.logs =res.logs;\n                              this.loader = false;\n\n\n                            },\n                           err => { this.loader = false; }\n\n                        );\n  }\n ngOnInit(){\n          // Load comments\n          this.loadLogs()\n          this.user=this.ss.getUserDetail();\n  }\n\n\n  ngOnChanges(changes:any) {\n      // Listen to the 'list'emitted event so as populate the model\n      // with the event payload\n\n    }\n\n}\n"],"sourceRoot":"/source/"}